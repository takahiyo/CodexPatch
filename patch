+# ここに Codex から取得したパッチ（diff）を貼り付けてください。
+# 例:
+# --- a/path/to/file
+# +++ b/path/to/file
+# @@
+#  ...
diff --git a/README.md b/README.md
index b3f56f9f836bc6ad68ad24121eccfb93f98b3179..551e786bec7b6e9efefc96baf29e9e3892026cb8 100644
--- a/README.md
+++ b/README.md
@@ -1 +1,31 @@
-# CodexPatch
\ No newline at end of file
+# 【テスト済】CodexPatch
+
+このリポジトリは、Codex から出力されたパッチを手動で貼り付け、GitHub Actions により自動適用するためのサンプル構成です。
+
+## 構成
+
+- `patch` : Codex から取得した差分を貼り付けるプレースホルダーファイル。
+- `.github/workflows/apply-codex-patch.yml` : パッチ適用用のワークフロー。
+
+## 運用手順
+
+1. **Codex からパッチを取得**  
+   開発を依頼した結果として出力された差分（`diff`）をコピーします。
+
+2. **パッチファイルへ貼り付け**  
+   リポジトリルートの `patch` ファイルを開き、取得した差分で上書き保存します。複数のパッチを管理したい場合はファイル名を分け、ワークフロー入力で指定してください。
+
+3. **ワークフローを実行**  
+   GitHub 上で「Actions」タブを開き、`Codexパッチ適用` ワークフローを `Run workflow` から手動起動します。以下のパラメータを指定します。
+   - `target_branch` : パッチ適用対象のブランチ名（既定値は `main`）。
+   - `patch_file` : パッチファイルのパス（既定値は `patch`）。
+
+4. **結果を確認**  
+   ワークフローが成功すると、対象ブランチにコミットされるか、または Pull Request が作成されます（条件はワークフロー定義を参照）。必要に応じてテストステップを追加し、適用結果をレビューしてください。
+
+## 注意事項
+
+- 適用先ブランチとパッチが想定しているコミットが一致していることを確認してください。
+- `git apply` で競合が発生した場合、ワークフローは失敗します。その際はローカルで手動適用し、調整を行ってください。
+- 自動コミット前にテストや Lint を実行したい場合は、ワークフロー内の `Run tests (optional)` ステップを有効化してコマンドを記述してください。
+- 本構成はサンプルであり、実運用ではアクセス制御・ログ取得・通知などのガードレール整備を推奨します。
