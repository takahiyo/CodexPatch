diff --git a/patch b/patch
new file mode 100644
index 0000000000000000000000000000000000000000..7cd031d904ed48b2beabadd2c844887de7561b6a
--- /dev/null
+++ b/patch
@@ -0,0 +1,6 @@
+# ここに Codex から取得したパッチ（diff）を貼り付けてください。
+# 例:
+# --- a/path/to/file
+# +++ b/path/to/file
+# @@
+#  ...
diff --git a/README.md b/README.md
index 073510c72fef4b61dc643bbe7fd650974a306eda..acad6492a5db0651b1ea66040b01f1cda31ae2b1 100644
--- a/README.md
+++ b/README.md
@@ -1,31 +1,33 @@
 # CodexPatch
 
 このリポジトリは、Codex から出力されたパッチを手動で貼り付け、GitHub Actions により自動適用するためのサンプル構成です。
 
 ## 構成
 
 - `patch` : Codex から取得した差分を貼り付けるプレースホルダーファイル。
 - `.github/workflows/apply-codex-patch.yml` : パッチ適用用のワークフロー。
+  隠しディレクトリである `.github` 配下に配置されている点に注意してください。
 
 ## 運用手順
 
 1. **Codex からパッチを取得**  
    開発を依頼した結果として出力された差分（`diff`）をコピーします。
 
 2. **パッチファイルへ貼り付け**  
    リポジトリルートの `patch` ファイルを開き、取得した差分で上書き保存します。複数のパッチを管理したい場合はファイル名を分け、ワークフロー入力で指定してください。
 
 3. **ワークフローを実行**  
    GitHub 上で「Actions」タブを開き、`Codexパッチ適用` ワークフローを `Run workflow` から手動起動します。以下のパラメータを指定します。
    - `target_branch` : パッチ適用対象のブランチ名（既定値は `main`）。
    - `patch_file` : パッチファイルのパス（既定値は `patch`）。
 
 4. **結果を確認**  
    ワークフローが成功すると、対象ブランチにコミットされるか、または Pull Request が作成されます（条件はワークフロー定義を参照）。必要に応じてテストステップを追加し、適用結果をレビューしてください。
 
 ## 注意事項
 
 - 適用先ブランチとパッチが想定しているコミットが一致していることを確認してください。
 - `git apply` で競合が発生した場合、ワークフローは失敗します。その際はローカルで手動適用し、調整を行ってください。
 - 自動コミット前にテストや Lint を実行したい場合は、ワークフロー内の `Run tests (optional)` ステップを有効化してコマンドを記述してください。
+- `.github` ディレクトリは GitHub Actions が設定を認識する標準位置です。名称を変更せず、必要に応じて `ls -a` などで存在を確認してください。
 - 本構成はサンプルであり、実運用ではアクセス制御・ログ取得・通知などのガードレール整備を推奨します。
